{"version":3,"sources":["store/actions.ts","store/index.ts","api/api.ts","store/selectors.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["ActionType","setTodosAction","payload","type","SET_TODOS","setUserAction","SET_USER","initialState","todos","user","store","createStore","state","action","BASE_URL","getTodos","a","fetch","response","json","getUser","id","TypeShow","getTodosSelector","getUserSelector","TodoList","dispatch","useDispatch","useState","All","showBy","setShowBy","todosFromServer","getUserFromServ","useEffect","useSelector","name","value","onChange","target","Completed","Uncompleted","className","filter","todo","completed","resultArr","map","classNames","list__item_uncompl","title","onClick","userId","CurrentUser","phone","email","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2509f0c6.chunk.js","sourcesContent":["import { Todo, User } from '../react-app-env';\n\nexport type Action = {\n  type: ActionType,\n  payload: any\n};\n\nexport enum ActionType {\n  SET_TODOS = 'SET_TODOS',\n  SET_USER = 'SET_USER',\n}\n\nexport const setTodosAction = (payload: Todo[]) => ({\n  type: ActionType.SET_TODOS,\n  payload,\n});\n\nexport const setUserAction = (payload: User | null) => ({\n  type: ActionType.SET_USER,\n  payload,\n});\n","import { createStore } from 'redux';\nimport { Action, ActionType } from './actions';\n\nimport { State } from '../react-app-env';\n\nexport const initialState: State = {\n  todos: [],\n  user: null,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.SET_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n\n    case ActionType.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import { Todo, User } from '../react-app-env';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const response = await fetch(`${BASE_URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(id: number): Promise<User> {\n  const response = await fetch(`${BASE_URL}/users/${id}`);\n\n  return response.json();\n}\n","import { State } from '../react-app-env';\n\nexport const getTodosSelector = (state: State) => state.todos;\n\nexport const getUserSelector = (state: State) => state.user;\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos, getUser } from '../../api/api';\nimport { setTodosAction, setUserAction } from '../../store/actions';\nimport { getTodosSelector } from '../../store/selectors';\n\nimport './TodoList.scss';\n\nenum TypeShow {\n  All = 'all',\n  Completed = 'completed',\n  Uncompleted = 'uncompleted',\n}\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const [showBy, setShowBy] = useState<string>(TypeShow.All);\n\n  const todosFromServer = async () => {\n    dispatch(setTodosAction(await getTodos()));\n  };\n\n  const getUserFromServ = async (id: number) => {\n    dispatch(setUserAction(await getUser(id)));\n  };\n\n  useEffect(() => {\n    todosFromServer();\n  }, []);\n\n  const todos = useSelector(getTodosSelector);\n\n  const resultArr = () => {\n    switch (showBy) {\n      case TypeShow.All:\n        return [...todos];\n      case TypeShow.Completed:\n        return todos.filter(todo => todo.completed);\n      case TypeShow.Uncompleted:\n        return todos.filter(todo => !todo.completed);\n      default:\n        return [...todos];\n    }\n  };\n\n  return (\n    <>\n      <select\n        name=\"select\"\n        id=\"select\"\n        value={showBy}\n        onChange={({ target }) => setShowBy(target.value)}\n      >\n        <option value={TypeShow.All}>All</option>\n        <option value={TypeShow.Completed}>Completed</option>\n        <option value={TypeShow.Uncompleted}>Uncompleted</option>\n      </select>\n      <ul className=\"list\">\n        {resultArr().map(todo => (\n          <li\n            className=\"list__item\"\n            key={todo.id}\n          >\n            <span className={\n              classNames('list__item_compl', {\n                list__item_uncompl: !todo.completed,\n              })}\n            >\n              {todo.completed ? 'âœ”' : 'not'}\n            </span>\n            {todo.title}\n\n            <div className=\"list__item_button\">\n              <button\n                type=\"button\"\n                className=\"list__item_button_btn\"\n                onClick={() => {\n                  getUserFromServ(todo.userId);\n                }}\n              >\n                Select User\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { User } from '../../react-app-env';\nimport { setUserAction } from '../../store/actions';\nimport { getUserSelector } from '../../store/selectors';\n\nimport './CurrentUser.scss';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user: User | null = useSelector(getUserSelector);\n\n  return (\n    <div className=\"user\">\n      {user ? (\n        <>\n          <h1>{user.name}</h1>\n          <h2>{user.phone}</h2>\n          <h2>{user.email}</h2>\n\n          <button\n            type=\"button\"\n            className=\"user__remove\"\n            onClick={() => {\n              dispatch(setUserAction(null));\n            }}\n          >\n            X\n          </button>\n        </>\n      ) : (\n        <h1>Nothing selected</h1>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport { CurrentUser } from './components/CurrentUser';\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1>Redux list of todos</h1>\n      <div className=\"main\">\n        <div className=\"leftside\">\n          <TodoList />\n        </div>\n        <div className=\"rightside\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store } from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}